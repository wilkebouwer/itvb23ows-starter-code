version: "3"

services:
  app:
    build: ./app/
    depends_on:
      - database
      - ai
    command: php -S 0.0.0.0:${APP_PORT}
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - databasenet
      - ainet
    ports:
      - "${APP_PORT}:${APP_PORT}"
  database:
    build: ./database/
    image: mysql
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      databasenet:
        aliases:
          - mysqlserver
  ai:
    build: ./ai/
    command: flask --app app run -h 0.0.0.0 --debug
    networks:
      ainet:
        aliases:
          - aiserver
  jenkins:
    build:
      context: ./jenkins/
      args:
        DOCKER_GID: ${DOCKER_GID}
    depends_on:
      - sonarqube
    environment:
      JENKINS_ADMIN_ID: ${JENKINS_ADMIN_ID}
      JENKINS_ADMIN_PASSWORD: ${JENKINS_ADMIN_PASSWORD}
      JENKINS_PORT: ${JENKINS_PORT}
      SONARQUBE_PORT: ${SONARQUBE_PORT}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - sonarnet
    ports:
      - "${JENKINS_PORT}:${JENKINS_PORT}"
  sonarqube:
    build: ./sonarqube/
    networks:
      sonarnet:
        aliases:
          - sonarqubeserver
    ports:
      - "${SONARQUBE_PORT}:${SONARQUBE_PORT}"

networks:
  databasenet:
  ainet:
  sonarnet:
